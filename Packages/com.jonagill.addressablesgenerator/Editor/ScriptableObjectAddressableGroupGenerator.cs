using System;
using System.Collections.Generic;
using UnityEditor.AddressableAssets.Settings.GroupSchemas;
using UnityEngine;

namespace AddressablesGenerator
{
    /// <summary>
    /// Handles automatically generating Addressables groups for the given ScriptableObject type,
    /// both when an instance of that asset type gets modified and again right before a build
    /// (to ensure up-to-date Addressables in each build).
    ///
    /// Note that if your Scriptable Object is referencing Addressable assets directly (e.g. a prefab library
    /// with an array of direct prefab references), you must make sure that these direct references do not themselves
    /// affect our Addressable dependency chain. This can be done by making sure your source asset doesn't exist in the
    /// build itself (by not including it in Addressables itself and not referencing it via any other Addressable asset),
    /// or by making it so your direct source references are not compiled at runtime by wrapping them in an #if UNITY_EDITOR directive
    /// </summary>
    public abstract class ScriptableObjectAddressableGroupGenerator<T, U> where T : ScriptableObject where U : ScriptableObjectAddressableGroupGenerator<T, U>
    {
        // Should be invoked via an [InitializeOnLoadMethod]
        protected static void RegisterGenerator()
        {
            var instance = Activator.CreateInstance<U>();
            
            AddressableGroupGenerator.RegisterGeneratorForType<T>(
                instance.GenerateGroupNameForAsset,
                instance.GenerateAssetRequestsForAsset,
                instance.BundlePackingMode,
                instance.ClearGroup,
                onAddressablesGeneratedForAsset: obj =>
                {
                    if (obj is T asset)
                    {
                        instance.OnAddressablesGeneratedForAsset(asset);
                    }
                });
        }

        /// <summary>
        /// What kind of bundle packing to use for groups generated by this asset type
        /// </summary>
        protected abstract BundledAssetGroupSchema.BundlePackingMode BundlePackingMode { get; }
        
        /// <summary>
        /// Whether to clear the Addressable Group each time we generate assets for this asset type
        /// </summary>
        protected abstract bool ClearGroup { get; }
        
        /// <summary>
        /// What name to use for the Addressable Group generated for this asset
        /// </summary>
        protected abstract string GenerateGroupNameForAsset(T asset);
        
        /// <summary>
        /// Generate the list of individual asset entries to be added to the generated Addressable Group for this asset
        /// </summary>
        protected abstract IReadOnlyList<AddressableGroupGenerator.AssetEntryRequest> GenerateAssetRequestsForAsset(T asset);
        
        /// <summary>
        /// Callback invoked after generated Addressable Groups for this asset.
        /// Can be used to e.g. retrieve runtime AssetReferences each asset added to the Group and cache
        /// those to use at runtime instead of editor-time direct references
        /// </summary>
        protected abstract void OnAddressablesGeneratedForAsset(T asset);
    }
}